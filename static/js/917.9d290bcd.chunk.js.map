{"version":3,"file":"static/js/917.9d290bcd.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesListStyled.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchForm/SearchFormStyled.js","components/SearchBar/SearchForm/SearchForm.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '35f52823224968ebaf30f4a5ee6d071a',\n    }\n})\n\nexport const getTrending = async(page) => {\n    const { data } = await instance.get(\"/trending/movie/day\");\n    return data;\n}\n\nexport const getSearchMovies = async(query) => {\n    const { data } = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n        }\n    })\n    return data;\n}\n\nexport const getMovieDetails = async(id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n}\n\nexport const getMovieCredits = async(id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n}\n\nexport const getMovieReviews = async(id) => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}\n","import styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`","import { Dna } from  'react-loader-spinner'\nimport { LoaderContainer } from './LoaderStyled'\n\nexport default function Loader() {\n  return (\n    <LoaderContainer>\n      <Dna\n          visible={true}\n          height=\"400\"\n          width=\"400\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n      />\n    </LoaderContainer>\n  )\n}\n\n\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nlist-style: none;\npadding: 0;\n`","import { Link, useLocation } from \"react-router-dom\";\nimport { List } from \"./MoviesListStyled\";\n\nimport PropTypes from \"prop-types\";\n\nconst MoviesList = ({ items }) => {\n    const location = useLocation();\n    const element = items.map(({ title, id }) =>\n        <li key={id}>\n            <Link state={{from: location}} to={`/movies/${id}`}>{title}</Link>\n        </li>)\n  return <List>{element}</List>;\n}\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired\n    }))\n  }\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`\n\nexport const FormButton = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    &:hover {\n        opacity: 1;\n    }\n`\n\nexport const FormButtonLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`\n\nexport const FormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n    &::placeholder {\n        font: inherit;\n        font-size: 18px;\n    }\n`","import { Form, FormButton, FormButtonLabel, FormInput } from \"./SearchFormStyled\";\nimport { HiOutlineSearch } from \"react-icons/hi\";\n\nimport PropTypes from \"prop-types\";\nimport { useState } from 'react';\n\nexport default function SearchForm({onSubmit}) {\n  const [searchName, setSearchName] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setSearchName(value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(searchName);\n    reset()\n  }\n\n  const reset = () => {\n    setSearchName(\"\");\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n        <FormButton type=\"submit\" onClick={handleSubmit}>\n            <HiOutlineSearch />\n            <FormButtonLabel />\n        </FormButton>\n\n        <FormInput\n            value={searchName}\n            onChange={handleChange}\n            name=\"searchName\"\n            type=\"text\"\n            autocomplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            required\n        />\n    </Form>\n  )\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}\n","import SearchForm from \"./SearchForm/SearchForm\"\n\nexport default function SearchBar({onSearch}) {\n  return (\n    <div>\n        <SearchForm onSubmit={onSearch} />\n    </div>\n  )\n}\n","import { getSearchMovies } from \"api/api\"\nimport { useEffect, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\n\nimport Loader from \"components/Loader/Loader\";\nimport SearchBar from \"components/SearchBar/SearchBar\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\nexport default function Movies() {\n    const [movies, setMovies] = useState([]);\n    const [isItems, setIsItems] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQuery = searchParams.get(\"query\");\n\n    useEffect(() => {\n        const fetchMovies = async() => {\n            setLoading(true);\n            setError(null);\n            setIsItems(true);\n            try {\n                const { results } = await getSearchMovies(searchQuery);\n                if (!results.length && searchQuery) {\n                  setIsItems(false)\n                  setMovies([]);\n                  return;\n                }\n                setMovies(results);\n            } \n            catch (error) {\n                setError(error);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        if (searchQuery) {\n          fetchMovies();\n        }\n    }, [searchQuery]);\n\n    const onSearch = (searchName) => {\n        setSearchParams({query: searchName});\n    }\n\n    const isMovies = Boolean(movies.length);\n\n    return (\n        <main>\n            <SearchBar onSearch={onSearch}/>\n            {loading && <Loader />}\n            {error && <b>Oops, something went wrong. Please try to reload the page</b>}\n            {isMovies && <MoviesList items={movies}/>}\n            {!isMovies && !isItems && <b>There are no movies matching your search query \"{searchQuery}\"</b>}\n        </main>\n    )\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","page","get","data","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","LoaderContainer","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","List","items","location","useLocation","element","map","title","state","from","to","Form","FormButton","FormButtonLabel","FormInput","SearchForm","onSubmit","useState","searchName","setSearchName","handleSubmit","e","preventDefault","reset","type","onClick","value","onChange","target","name","autocomplete","autoFocus","placeholder","required","SearchBar","onSearch","Movies","movies","setMovies","isItems","setIsItems","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","useEffect","fetchMovies","results","length","isMovies","Boolean","MoviesList"],"sourceRoot":""}