{"version":3,"file":"static/js/623.eb8cf419.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","components/Navbar/NavbarStyled.js","components/MovieCard/MovieCardStyled.js","components/MovieCard/MovieCard.jsx","pages/Movies/MovieDetails/MovieDetailsStyled.js","pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '35f52823224968ebaf30f4a5ee6d071a',\n    }\n})\n\nexport const getTrending = async(page) => {\n    const { data } = await instance.get(\"/trending/movie/day\");\n    return data;\n}\n\nexport const getSearchMovies = async(query) => {\n    const { data } = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n        }\n    })\n    return data;\n}\n\nexport const getMovieDetails = async(id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n}\n\nexport const getMovieCredits = async(id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n}\n\nexport const getMovieReviews = async(id) => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}\n","import styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`","import { Dna } from  'react-loader-spinner'\nimport { LoaderContainer } from './LoaderStyled'\n\nexport default function Loader() {\n  return (\n    <LoaderContainer>\n      <Dna\n          visible={true}\n          height=\"400\"\n          width=\"400\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n      />\n    </LoaderContainer>\n  )\n}\n\n\n","import styled from \"styled-components\";\n\nexport const NavMenu = styled.ul`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\npadding-inline-start: 0;\nlist-style: none;\n`\n\nexport const NavItem = styled.li`\ncursor: pointer;\n\npadding: 10px;\n\n&:not(:last-child) {\n    margin-right: 20px;\n}\n\n& a {\n    text-decoration: none;\n\n    color: black;\n}\n\n& a.active {\n    border-bottom: 5px solid red;\n}\n`","import styled from \"styled-components\";\n\nexport const MovieCardContainer = styled.div`\ndisplay: flex;\n\npadding: 20px;\n\nbackground-color: lightgray;\n\nmargin-top: 20px;\n\n& img {\n    margin-right: 20px;\n}\n`","import PropTypes from \"prop-types\";\n\nimport { MovieCardContainer } from \"./MovieCardStyled\";\n\nexport default function MovieCard({ item }) {\n    const { poster_path, title, vote_average, overview, genres, release_date } = item;\n    const poster = `https://image.tmdb.org/t/p/w200/${poster_path}`;\n    const movieGenres = genres.map(item => item.name).join(\", \");\n    const userScore = Math.round(vote_average * 10);\n    const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <MovieCardContainer>\n        {poster_path && <img src={poster} alt={title} />}\n        <div>\n            {title && <h1>{title}({releaseDate})</h1>}\n            {userScore > 0 ? <h2>User Score: {userScore}%</h2> : <p>There are no ratings yet</p>}\n            <h2>Overview:</h2>\n            {overview && <p>{overview}</p>}\n            {movieGenres && <h3>{movieGenres}</h3>}\n        </div>\n    </MovieCardContainer>\n  )\n}\n\nMovieCard.propTypes = {\n  item: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array,\n    release_date: PropTypes.string.isRequired\n  })\n}","import styled from \"styled-components\";\n\nexport const BackButton = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\ncursor: pointer;\n\nborder: 2px solid black;\nborder-radius: 10px;\n\n&:hover {\n    background-color: lightgray;\n}\n`","import { useState, useEffect } from \"react\"\nimport { useParams, useNavigate, NavLink, Outlet, useLocation } from \"react-router-dom\";\n\nimport Loader from \"components/Loader/Loader\";\nimport MovieCard from \"components/MovieCard/MovieCard\";\n\nimport { getMovieDetails } from \"api/api\";\n\nimport { NavItem, NavMenu } from \"components/Navbar/NavbarStyled\";\nimport { BackButton } from \"./MovieDetailsStyled\";\n\nimport { IoArrowBackOutline } from \"react-icons/io5\";\n\nexport default function MovieDetails() {\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from || \"/\";\n    \n    useEffect(() => {\n        const fetchMovie = async() => {\n            setLoading(true);\n            setError(null);\n            try {\n                const result = await getMovieDetails(movieId);\n                setMovie(result);\n            } \n            catch (error) {\n                setError(error);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovie();\n    }, [movieId]);\n\n    const goBack = () => navigate(from);\n\n    return (\n        <>\n            <div>\n                {movie && <BackButton onClick={goBack}><IoArrowBackOutline></IoArrowBackOutline> Back</BackButton>}\n                {loading && <Loader />}\n                {error && <h2>Oops, something went wrong. Please try to reload the page</h2>}\n                {movie && <MovieCard item={movie}/>}\n            </div>\n            {movie && <div>\n                <NavMenu>\n                    <NavItem>\n                        <NavLink state={{from}} to={'cast'}>Cast</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink state={{from}} to={'reviews'}>Reviews</NavLink>\n                    </NavItem>\n                </NavMenu>\n            </div>}\n            <Outlet />\n        </>\n    )\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","page","get","data","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","LoaderContainer","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","NavMenu","NavItem","MovieCardContainer","MovieCard","item","poster_path","title","vote_average","overview","genres","release_date","poster","movieGenres","map","name","join","userScore","Math","round","releaseDate","slice","src","alt","BackButton","MovieDetails","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","result","onClick","to"],"sourceRoot":""}